function createCharacterSheet(){characterCount++;$("#character-container").append(getNextBlankCharacter(characterCount))}function getNextBlankCharacter(n){var t=$("[character-id]").last().clone(),i;return t.find("[character-name]").attr("character-name",n),t.find("[character-name]").attr("onclick","setPlayer(this,"+n+")"),t.find("[add-weapon-btn]").attr("onclick","addWeapon("+n+")"),t.find("[delete-character-btn]").attr("onclick","deleteCharacter("+n+")"),t.attr("character-id",n),i=t.find("[character-name]").val(),t.find("[character-name]").val(i+" "+n),t.find("[w-col-btn]").attr("href","#wcollapse-"+n),t.find("[w-col-show]").attr("id","wcollapse-"+n),t.find("[a-col-btn]").attr("href","#acollapse-"+n),t.find("[a-col-show]").attr("id","acollapse-"+n),t}function combatLog(n){$(".modal-body").append("<p>"+n+"<\/p>");console.log(n)}function showToast(n){var t=$(".toast:not(.show)").first();t.find(".toast-body").empty().append("<p>"+n+"<\/p>");t.toast("show")}function setPlayer(n,t){isCntlPressed?(CurrentCombatArena.AddTarget(t),$(n).addClass("alert-danger")):(CurrentCombatArena.Clear(),$("[character-name]").removeClass("alert-danger").removeClass("alert-info"),CurrentCombatArena.SetAttacker(t),$(n).addClass("alert-info"))}function attack(n){CurrentCombatArena.Targets.length>0&&CurrentCombatArena.RollCombat(n)}function getAttacker(n,t){var r=$('[character-id="'+n+'"]'),u=r.find("[character-name]").val(),i=r.find('[weapon-id ="'+t+'"]'),h=i.find("[weapon-name]").val(),c=i.find("[weapon-rm]").val(),f=i.find("[weapon-thf]").val(),l=i.find("[weapon-eva]").val(),e=i.find("[dv]").val(),o=i.find("[pvr]").val(),s=i.find("[damage-type]").val(),a=i.find("[reach]").val();return new Attacker(n,u,e,o,f,s,!1,!1)}function getTarget(n){var t=$('[character-id="'+n+'"]'),i=t.find("[character-name]").val(),c=t.find("[rm]").val(),r=t.find("[eva]").val(),u=t.find("[ar]").val(),f=t.find("[ar]").attr("ar"),e=t.find("[pdr]").val(),o=t.find("[hp]").val(),s=t.find("[temp-hp]").val(),h=t.find("[wound]").val();return new Target(n,i,o,s,h,r,u,f,e)}function setTarget(n,t,i,r,u){var f=$('[character-id="'+n+'"]'),u=f.find("[ar]").val(u),t=f.find("[hp]").val(t),i=f.find("[temp-hp]").val(i),r=f.find("[wound]").val(r)}function addWeapon(n){var r=$('[character-id="'+n+'"]'),u=r.find("[weapon-id]"),t=u.last().attr("weapon-id"),i;t++;i=u.first().clone().attr("weapon-id",t);i.find("[weapon-name]").attr("onclick","attack("+t+")");r.find("#weapon-container").append(i)}function deleteRow(n){var t=$(n).closest("#weapon-container").find("[weapon-id]");t.length>1&&$(n).closest(".row").remove()}function deleteCharacter(n){var t=$("#character-container").find("[character-id]");t.length>1&&$("[character-id="+n+"]").remove()}var isCntlPressed,characterCount,CombatCalculator,CombatArena,CurrentCombatArena,Attacker,Target;$(document).keydown(function(n){n.which=="17"&&(isCntlPressed=!0)});$(document).keyup(function(){isCntlPressed=!1});isCntlPressed=!1;$(document).ready(function(){$(".toast").toast({delay:2e3})});characterCount=1;CombatCalculator=function(n,t,i){this.BaseRoll=Number(i);this.ToHit=Number(n.ToHit);this.AttackerName=n.Name;this.DamageValue=Number(n.DV);this.PenatrationDamageValue=Number(n.PDV);this.DamageType=n.DamageType;this.IsSpellAttack=n.IsSpellAttack;this.IsPenatrationOptional=n.IsPenatrationOptional;this.IsPenatrationUsed=n.IsPenatrationUsed;this.TargetId=t.Id;this.TargetName=t.Name;this.HP=Number(t.HP);this.Wound=Number(t.Wound);this.TempHP=Number(t.TempHP);this.EVA=Number(t.EVA);this.ArmorRating=Number(t.ArmorRating);this.ArmorRatingBase=Number(t.ArmorRatingBase);this.PenatrationDefenseRating=Number(t.PenatrationDefenseRating);this.DidHit=function(n,t,i){if(n+t>i){if(!this.IsSpellAttack){var r=n+t-i;r>30?(this.DamageFactor=2,combatLog("Killing Blow")):r>15?(this.DamageFactor=1.5,combatLog("Critical Blow")):r>5?(this.DamageFactor=1,combatLog("Solid Hit")):(this.DamageFactor=.5,combatLog("Grazing Blow"))}return!0}return!1};this.HasPenetration=function(n,t){(this.IsPenatrationOptional!=!0||this.IsPenatrationUsed!=!1)&&(n>0?n>t?(this.IsIgnoreArmor=!0,combatLog("Penetration occured and is ignoring armor")):this.IsIgnoreArmor=!1:(this.IsIgnoreArmor=!1,combatLog("the weapon does not have penetration")))};this.CalculateHit=function(n){var t=Math.ceil(n*this.DamageFactor),i;if(this.IsPenatrationOptional==!0&&this.IsPenatrationUsed==!0&&(t=Math.ceil(t*this.PenatrationOptionPenalty),combatLog("the attacks damage penalty is "+this.PenatrationOptionPenalty+" for using penatration technique")),!this.IsIgnoreArmor&&this.ArmorRating>0)if(t>=this.ArmorRatingBase*.5&&this.CalculateArmorReduction(t,this.ArmorRatingBase),t>this.ArmorRating)t=t-this.ArmorRating;else return combatLog("players armor took the damage");if(this.TempHP>0){if(i=t,t-=this.TempHP,t<=0)return this.TempHP-=i,combatLog("players temp hp took damage");this.TempHP=0}if(this.HP-=t,this.Wound+=t,combatLog("player took "+t+" damage"),this.HP<1)return combatLog("player has been killed")};this.CalculateArmorReduction=function(n,t){if(n<t*2){this.ArmorRating--;combatLog("players armor was reduced by 1 and is "+this.ArmorRating);return}var i=Math.floor(n/t);combatLog("players armor was reduced by "+i+" and is "+this.ArmorRating);this.ArmorRating=this.ArmorRating-i;this.ArmorRating<0&&(this.ArmorRating=0)};this.Roll=function(){if(this.HP<0)return combatLog("Why would you attack a dead person... you ANIMAL!");this.DidHit(this.BaseRoll,this.ToHit,this.EVA)?(this.HasPenetration(this.PenatrationDamageValue,this.PenatrationDefenseRating),this.CalculateHit(this.DamageValue,this.ArmorRating)):combatLog("you missed")}};CombatArena=function(){this.WeaponId=null;this.AttackerId=null;this.Attacker=null;this.Targets=[];this.CombatCalculators=[];this.RollCombat=function(n){$(".modal-body").empty();this.WeaponId=n;this.Attacker=getAttacker(this.AttackerId,n);var t=$('[character-id="'+this.AttackerId+'"]'),r=t.find("[roll]").val();for(i=0;i<this.Targets.length;i++)this.CombatCalculators.push(new CombatCalculator(this.Attacker,getTarget(this.Targets[i]),r));this.RunCombatCalculations();this.CombatCalculators=[];$("#combatModal").modal("show")};this.RunCombatCalculations=function(){for(i=0;i<this.CombatCalculators.length;i++)combatLog(this.Attacker.Name+" is attacking "+this.CombatCalculators[i].TargetName),this.CombatCalculators[i].Roll(),setTarget(this.CombatCalculators[i].TargetId,this.CombatCalculators[i].HP,this.CombatCalculators[i].TempHP,this.CombatCalculators[i].Wound,this.CombatCalculators[i].ArmorRating),combatLog("------------------")};this.SetAttacker=function(n){this.AttackerId=n;showToast("Attacker Added")};this.AddTarget=function(n){var r=0,u,t;for(i=0;i<this.Targets.length;i++)this.Targets[i]==n&&r++;r==0?(showToast("Target Added"),this.Targets.push(n),u=$('[character-id="'+n+'"]').find("[character-name]").val(),t=$('[character-id="'+this.AttackerId+'"]').find("[targeted]").val(),t=t+u+" ",$('[character-id="'+this.AttackerId+'"]').find("[targeted]").val(t)):showToast("Target is already targeted")};this.Clear=function(){$("[targeted]").val("");this.AttackerId=null;this.WeaponId=null;this.Attacker=null;this.Targets=[];this.CombatCalculators=[]}};CurrentCombatArena=new CombatArena;Attacker=function(n,t,i,r,u,f,e,o){this.Id=n;this.Name=t;this.DV=i;this.PDV=r;this.ToHit=u;this.DamageType=f;this.IsSpellAttack=e;this.IsPenatrationOptional=o};Target=function(n,t,i,r,u,f,e,o,s){this.Id=n;this.Name=t;this.HP=i;this.TempHP=r;this.Wound=u;this.EVA=f;this.ArmorRating=e;this.ArmorRatingBase=o;this.PenatrationDefenseRating=s};