@using ROB.Blazor.Client.ViewModels

<div class="main-stats-size-reach" hidden="@Hidden">
    <div class="size-reach-wrapper">
        <span class="oi oi-crop" style="color:@(Character.GetFactionColor(Hidden))"></span>
        @foreach (ROB.Blazor.Shared.Models.Stat stat in new[] { Character.Size, Character.Reach })
        {
            <span class="stat-bar-tooltip head-character-stat">
                @stat.Abbreviation
                <span class="stat-bar-tooltiptext">@stat.Name</span>
            </span>
            <input class="character-stat" @bind="@stat.Value" readonly />
        }
    </div>
</div>

<style>
    .size-reach-wrapper {
        margin-top: .5rem;
        padding-top: .5rem;
        padding-left: 1rem;
        border-top: solid 2px;
        display: grid;
        grid-template-columns: 1rem 4rem 2.5rem 4rem 2.5rem;
        align-items: center;
        justify-items: end;
        column-gap: 5px;
    }
</style>

@code {
    [CascadingParameter(Name = "Character")]
    protected CharacterViewModel Character { get; set; }

    [Parameter]
    public bool Hidden { get => _hidden; set { _hidden = value; StateHasChanged(); } }

    private bool _hidden;

    protected override async Task OnInitializedAsync()
    {
        Character.StatsChanged += StateHasChanged;
    }
}
