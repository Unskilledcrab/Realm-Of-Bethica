@using ROB.Blazor.Shared.Interfaces.CombatTracker

<div class="character-details transition-height-scale" style="@GetCollapsedState()">
    <span class="oi oi-eyedropper" style="color:@(Character.GetFactionColor(Hidden))"></span>
    <div class="list-wrapper">
        <CharacterListableItemComponent Title="React?" ListedItems="Character.Reactions" Actionable="false"></CharacterListableItemComponent>
        <CharacterListableItemComponent Title="Traits" ListedItems="Character.Traits" Actionable="true" Icon="oi oi-random" ActionClicked="ActionClicked"></CharacterListableItemComponent>
        <CharacterListableItemComponent Title="Actions" ListedItems="Character.Actions" Actionable="true" Icon="oi oi-random" ActionClicked="ActionClicked"></CharacterListableItemComponent>
    </div>
</div>

@code {
    [CascadingParameter(Name = "Character")]
    protected ICharacter Character { get; set; }

    [Parameter]
    public bool Hidden { get; set; }

    private string GetCollapsedState()
    {
        double itemScale = 2.5;
        int height = (int)Math.Round(3 + itemScale * (Math.Max(Character.Reactions.Count, 1) + Math.Max(Character.Traits.Count, 1) + Math.Max(Character.Actions.Count, 1)));
        if (Hidden)
            return "max-height: 0;";
        else
            return $"max-height: {height}rem;";
    }

    private void ActionClicked(string str)
    {
        Character.PerformAction(str);
    }
}

